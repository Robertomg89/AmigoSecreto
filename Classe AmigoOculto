package Database;  
  
import java.util.ArrayList;  
import java.util.Collections;  
import java.util.Random;  
import javax.swing.JOptionPane; 
import java.sql.*; 
  
public class AmigoOculto   
{  
    ArrayList<ListaAmigos> dados = new ArrayList<>();  
    ArrayList<ListaAmigos> Sorteio = new ArrayList<>();  
    ArrayList<String> AmigosSorteados = new ArrayList<>();  
      
    public void Cadastro()  
    {  
        ListaAmigos lista = new ListaAmigos();  
        conexao cx = new conexao();
	
	try {
       		Class.forName("org.h2.Driver");
                Connection conn = DriverManager.getConnection("jdbc:h2:~/test","sa","");
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT * FROM PESSOA");
                    
                while(rs.next()){        
        		lista.setNome(rs.getString("Nome"));  
        		lista.setEmail(rs.getString("Email")); 
			dados.add(lista); 
                }       
   }	}  
      
    public void Sorteio()  
    {  
        Collections.shuffle(dados);  
        System.out.println(dados.toString());  
                    
        Random sorteio = new Random();  
          
        ListaAmigos lista = new ListaAmigos();  
          
        int NumSorteado;  
          
        for(int contador = 0; contador < dados.size(); contador++)  
        {  
            lista.setSorteou(dados.get(contador).getNome());  
            NumSorteado = sorteio.nextInt(dados.size());  
            AmigosSorteados.add(dados.get(NumSorteado).getNome());  
              
            while(AmigosSorteados.contains(dados.get(NumSorteado).getNome()) == true ||   
                    lista.getSorteou() == dados.get(NumSorteado).getNome())  
            {  
                NumSorteado = sorteio.nextInt(dados.size());  
            }  
            lista.setSorteado(dados.get(NumSorteado).getNome());  
          
            Sorteio.add(lista);  
        }  
    }  

    public void Resultado()  
    {  
        for(int contador = 0; contador < Sorteio.size(); contador++)  
        {  
            System.out.println(Sorteio.get(contador).getSorteou() + " tirou: " + Sorteio.get(contador).getSorteado());  
        }  
    }  

    public void Resetar()  
    {  
        if (dados.size() > 0) {	dados.removeAll(dados); }  
    }  
}  
